To do
-------------

dune/

	compBasic/
		
		Component (abstract)
		
		CompTransform -> Component
			x:Float
			y:Float
			vx:Float
			vy:Float
			hasMoved( restart:Bool = false ):Bool
	
	entities/
	
		Entity
			transform:Transform
			display:*
			inputs:Array<Input>
	
	systems/
	
		Space
		
		physic/
			SysPhysic -> System
				attachBody( entity, body )
				
				add( entity:Entity )
				remove( entity:Entity )
				
				getAll()
				getNear( body:CompBody )
				
			SysPhysicSidescroll -> SysPhysic
			Components/
				PhysBody
					entity
					shape
					contacts:Array<PhysShape>
					
					type = MOVABLE | COLLIDER | SOLID | ITEM
					solid_type = PLATFORM | LADDER | WALL
					onBody:PhysBody
				
				PhysBodyAlive -> PhysBody
					onCollide():Callback( PhysBody, PhysBody )
				
			Shapes
				PhysShape
					boundLeftX
					boundLeftY
					boundRightX
					boundRightY
					hitTestBounds( shape:Shape ):Bool
					hitTest()
				PhysShapeCircle -> PhysShape
				PhysShapeRect -> PhysShape
				PhysShapePoint -> PhysShape
			
		graphic/
			SysGraphic -> System
			
		input/
			SysInput -> System
			Components/
				CompInput -> Component
				CompJoystick -> CompInput
				CompIA -> CompInput
	
		System (abstract)
			refresh(dt:Float):void
			
	Game
		refresh()
		scene:Scene